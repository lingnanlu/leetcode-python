'''
结果要求同时满足三个条件。
其实第一个条件可以确定候选集，二，三条件用来筛选。
最直观的方法就是使用第一条件确定候选集，二，三条件筛选出结果。

如果预估复杂度呢？假设第一条件得到的候选集为n个数，那么从n个数中找到结果应该只是遍历一遍就好，所以这里的关键就是
如何得到这个n
由数学知识可知，是给出的数开个根号。
而因为遍历时不需要保留历史结果，所以空间复杂度为常数。

'''
class Solution:
    def constructRectangle(self, area: int) -> List[int]:

        result = [0,0]
        diff = 1e7
        for i in range(1, area + 1):
            if area % i == 0:
                j = int(area / i)
                # i,j找到的一对符合第一条件的

                if i >= j:
                    # 满足第二条件后，需要满足第三条件
                    # 这里需要和上一对满足条件的做对比
                    # 这里的关键是初始时，满足条件的一对如何赋值
                    # 这里应该赋值为这样的，就是找到的第一对肯定比初始的小，所以初始应该为无穷大。

                    if i - j < diff:
                        # 满足第三条件，更新结果
                        diff = i - j

                        result[0] = i
                        result[1] = j

        return result